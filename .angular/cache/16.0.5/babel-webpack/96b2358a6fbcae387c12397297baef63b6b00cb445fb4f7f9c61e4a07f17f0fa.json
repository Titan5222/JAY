{"ast":null,"code":"import { __decorate } from \"tslib\";\n// login.component.ts\nimport { Component } from '@angular/core';\n// import { AuthService } from './auth.service';\nlet LoginComponent = class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.error = false;\n  }\n  login() {\n    // this.authService.login(this.username, this.password)\n    //   .subscribe(result => {\n    //     if (result) {\n    //       this.router.navigate(['/dashboard']);\n    //     } else {\n    this.error = true;\n    //   }\n    // });\n  }\n};\n\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","LoginComponent","constructor","authService","router","error","login","__decorate","selector","templateUrl"],"sources":["/Users/titans/Desktop/web application/JAY/src/app/pages/login/login.component.ts"],"sourcesContent":["// login.component.ts\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n// import { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent {\n  username: string;\n  password!: string; // Add \"!\" non-null assertion operator here\n  error: boolean = false;\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  login() {\n    // this.authService.login(this.username, this.password)\n    //   .subscribe(result => {\n    //     if (result) {\n    //       this.router.navigate(['/dashboard']);\n    //     } else {\n          this.error = true;\n      //   }\n      // });\n  }\n}\n"],"mappings":";AAAA;AACA,SAASA,SAAS,QAAQ,eAAe;AAEzC;AAMA,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EAKzBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAF5D,KAAAC,KAAK,GAAY,KAAK;EAEiD;EAEvEC,KAAKA,CAAA;IACH;IACA;IACA;IACA;IACA;IACM,IAAI,CAACD,KAAK,GAAG,IAAI;IACrB;IACA;EACJ;CACD;;AAjBYJ,cAAc,GAAAM,UAAA,EAJ1BP,SAAS,CAAC;EACTQ,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE;CACd,CAAC,C,EACWR,cAAc,CAiB1B;SAjBYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}